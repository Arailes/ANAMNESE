# ANAMNESE
FICHA DE ANAMNESE - IDOMED - QUIXADA - T6A - 202407118577

Pojeto consiste na captacao sonora da anamnese e preenchimento automatico com a finalidade de agilizar os porcessos burocraticos que tomam muito tempo em consultas e a capta de informacoes esquecidas.

# 🩺 Anamnese por Reconhecimento de Voz + Manual

## ✅ Funcionalidades
- Reconhecimento de voz em português brasileiro com extração de sintomas e tempo
- Preenchimento manual integrado à mesma API
- Armazenamento em banco de dados PostgreSQL
- API REST com Express.js e NLP básico

## 🧰 Requisitos
- Node.js
- PostgreSQL
- npm ou yarn

## 🚀 Como executar o projeto localmente

### 1. Clonar o projeto
```bash
git clone https://github.com/seu-usuario/anamnese-app.git
cd anamnese-app
```

### 2. Criar o banco de dados PostgreSQL
```bash
createdb anamnese_db
psql -U seu_usuario -d anamnese_db -f backend/init.sql
```
> Substitua `seu_usuario` pelo seu usuário PostgreSQL

### 3. Configurar variáveis de ambiente (opcional)
Crie um arquivo `.env` na pasta `backend`:
```
DATABASE_URL=postgresql://seu_usuario:senha@localhost:5432/anamnese_db
```

### 4. Instalar dependências e iniciar o backend
```bash
cd backend
npm install
npm run dev
```
> O servidor rodará em http://localhost:4000

### 5. Instalar dependências e iniciar o frontend (React)
```bash
cd ../frontend
npm install
npm start
```
> A interface React estará em http://localhost:3000

### 6. Acessar o formulário manual (HTML/CSS)
Abra no navegador:
```
http://localhost:3000/static/anamnese-form.html
```

## 🔁 Scripts combinados (opcional - raiz do projeto)

Você pode criar um `package.json` na raiz e adicionar:
```json
{
  "scripts": {
    "start": "concurrently \"npm run server\" \"npm run client\"",
    "server": "cd backend && npm run dev",
    "client": "cd frontend && npm start"
  },
  "devDependencies": {
    "concurrently": "^8.2.0"
  }
}
```
E executar:
```bash
npm install --save-dev concurrently
npm run start
```

## 🌐 Deploy (Render)
- **Static Site**: frontend/build → build `npm install && npm run build`, publish directory `build`
- **Web Service**: backend → build `npm install`, start command `npm run start`

## 📘 Licença
Uso livre para fins acadêmicos ou médicos com responsabilidade.

-- PostgreSQL Schema (executar no banco):
CREATE TABLE anamnese (
  id SERIAL PRIMARY KEY,
  texto TEXT,
  queixa TEXT,
  tempo TEXT,
  criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP